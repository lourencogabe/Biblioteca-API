// <auto-generated />
using System;
using API.Models;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace BibliotecaApi.Migrations
{
    [DbContext(typeof(AppDataContext))]
    [Migration("20240627034208_BibliotecaDB")]
    partial class BibliotecaDB
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.6");

            modelBuilder.Entity("API.Models.Autor", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("NacionalidadeAutor")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeAutor")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TabelaAutor");
                });

            modelBuilder.Entity("API.Models.Emprestimo", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("DataEmprestimo")
                        .HasColumnType("TEXT");

                    b.Property<int?>("LivroId")
                        .HasColumnType("INTEGER");

                    b.Property<int?>("PesquisadorId")
                        .HasColumnType("INTEGER");

                    b.Property<DateTime?>("RetornoEmprestimo")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("LivroId");

                    b.HasIndex("PesquisadorId");

                    b.ToTable("TabelaEmprestimo");
                });

            modelBuilder.Entity("API.Models.Livro", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<int?>("AutorId")
                        .HasColumnType("INTEGER");

                    b.Property<string>("DataPublicacaoLivro")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomeLivro")
                        .HasColumnType("TEXT");

                    b.Property<string>("SinopseLivro")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("AutorId");

                    b.ToTable("TabelaLivros");
                });

            modelBuilder.Entity("API.Models.Pesquisador", b =>
                {
                    b.Property<int>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("INTEGER");

                    b.Property<string>("DocumentoPesquisador")
                        .HasColumnType("TEXT");

                    b.Property<string>("EnderecoPesquisador")
                        .HasColumnType("TEXT");

                    b.Property<string>("NomePesquisador")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("TabelaPesquisador");
                });

            modelBuilder.Entity("API.Models.Emprestimo", b =>
                {
                    b.HasOne("API.Models.Livro", "Livro")
                        .WithMany()
                        .HasForeignKey("LivroId");

                    b.HasOne("API.Models.Pesquisador", "Pesquisador")
                        .WithMany()
                        .HasForeignKey("PesquisadorId");

                    b.Navigation("Livro");

                    b.Navigation("Pesquisador");
                });

            modelBuilder.Entity("API.Models.Livro", b =>
                {
                    b.HasOne("API.Models.Autor", "Autor")
                        .WithMany()
                        .HasForeignKey("AutorId");

                    b.Navigation("Autor");
                });
#pragma warning restore 612, 618
        }
    }
}
